name: deploy-pypi

on:
    push:
        branches:
            - main
    release:
        types:
            - published

jobs:
    build_wheels:
        name: Build wheels on ${{ matrix.os }}
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest, windows-latest, macos-latest]
                
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            
            - name: Setup Python 
              uses: actions/setup-python@v2

            - name: Install cibuildwheel
              run: |
                  python -m pip install cibuildwheel==1.11.0

            - name: Install numpy
              run: |
                  python -m pip install --upgrade pip
                  python -m pip install --upgrade numpy

            - name: Install OpenMP and numpy for mac
              if: runner.os == 'macos'
              run: |
                  brew install libomp

                  # This is needed to import numpy in pypy3 (but not needed for
                  # pypy2 and CPython)
                  # brew install openblas
                  # OPENBLAS="$(brew --prefix openblas)"
                  # brew install lapack
                  # pip3 install numpy

            - name: Build wheels
              run: python -m cibuildwheel --output-dir wheelhouse
              env:
                  CIBW_BUILD: "*-manylinux_x86_64 *-macosx_x86_64 *-win_amd64"
                  CIBW_SKIP: "pp* cp27-* cp35-*"
                  CIBW_BUILD_VERBOSITY: 1
                  CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
            
            - name: Upload artifacts
              uses: actions/upload-artifact@v2
              with:
                  path: ./wheelhouse/*.whl
                  
    build_sdist:
        name: Build source distribution
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Install Python
              uses: actions/setup-python@v2

            - name: Install numpy
              run: |
                  python -m pip install --upgrade pip
                  python -m pip install --upgrade numpy
            
            - name: Build sdist
              run: python setup.py sdist
            
            - name: Upload artifacts
              uses: actions/upload-artifact@v2
              with:
                  path: dist/*.tar.gz

    upload_pypi:
        needs: [build_wheels, build_sdist]
        runs-on: ubuntu-latest
        name: Publish to PyPi
        
        # To upload to PyPI on every tag starting with 'v', use the following:
        # if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
        # To publish to pypi on each GitHub Release, use the following:
        # if: github.event_name == 'release' && github.event.action == 'published'
        steps:
            - name: Download artifacts
              uses: actions/download-artifact@v2
              with:
                  name: artifact
                  path: dist
            
            - name: Upload to PyPi
              uses: pypa/gh-action-pypi-publish@master
              with:
                  verbose: true
                  user: __token__
                  password: ${{ secrets.pypi_password }}

    test_pypi:
        needs: [upload_pypi]
        name: Test on ${{ matrix.os }} and Pyhton ${{ matrix.python-version }}
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest, windows-latest, macos-latest]
                # Despite the package is built on both cpython and pypy in
                # linux, we only test it on cpython, not on pypy, since many
                # other required dependencies (like matplotlib, etc) need to be
                # compiled on pypy.
                python-version: ['3.6', '3.7', '3.8', '3.9']

        steps:
            - name: Setup Python ${{ matrix.python-version }}
              uses: actions/setup-python@v2
              with:
                  python-version: ${{ matrix.python-version }}

            - name: Install packages
              run: |
                  python -m pip install --upgrade pip
                  python -m pip install pytest-cov
                  python -m pip install gaussian_proc

            - name: Checkout
              uses: actions/checkout@v2

            - name: Move source to avoid import from local folder
              run: mv gaussian_proc gaussian_proc-DoNotImport

            # This is to prevent the error "libomp is already initialized",
            # which occurs only in MacOS. To circumvent the error, the
            # following script will remove libomp.dylib from imate package, and
            # copies libomp.dylib from gaussian_proc to imate package.
            - name: Remove duplicate libomp
              if: matrix.os == 'macos-latest'
              run: |
                  chmod +x scripts/fix_libomp.sh
                  ./scripts/fix_libomp.sh `which python`
              shell: bash

            - name: Test
              run: pytest
