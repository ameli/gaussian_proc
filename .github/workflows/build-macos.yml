name: build-macos

on:
    # push:
    #     branches:
    #         - main
    release:
        types: 
            - published
    
jobs:
    build:

        runs-on: macos-latest
        strategy:
            fail-fast: false
            matrix:
                # PyPy works, but takes a long time to build, this commented out only for reducing the runner time
                # python-version: ['3.9', '3.10', '3.11', '3.12', 'pypy3.8', 'pypy3.9', 'pypy3.10']
                python-version: ['3.9', '3.10', '3.11', '3.12']

        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v4
              with:
                  python-version: ${{ matrix.python-version }}

            - name: Install prerequisites
              run: |
                  # Starting from libomp>=15.0, the libomp installation in homebrew is "keg-only",
                  # meaning that libomp is only installed in homebrew's directory, but not moved
                  # to /usr/local to avoid other OpenMP installations (such as with gcc's version
                  # of OpenMP). To use the homebrew's version of OpenMP,the following symbolic
                  # links are created. Without these, the installation will fail with the error
                  # of "fatal error: omp.h file found"
                  brew install libomp
                  libomp_dir=$(brew --prefix libomp)
                  ln -sf ${libomp_dir}/include/omp-tools.h  /usr/local/include/omp-tools.h
                  ln -sf ${libomp_dir}/include/omp.h        /usr/local/include/omp.h
                  ln -sf ${libomp_dir}/include/ompt.h       /usr/local/include/ompt.h
                  ln -sf ${libomp_dir}/lib/libomp.a         /usr/local/lib/libomp.a
                  ln -sf ${libomp_dir}/lib/libomp.dylib     /usr/local/lib/libomp.dylib

            # Install OpenBLAS when PyPy is used, since it tries to compile numpy and scipt from
            # source, whic needs OpenBLAS
            - name: Install package and dependencies (OpenBLAS, gfortran)
              if: (contains(matrix.python-version, 'pypy'))
              run: |
                  brew install openblas
                  brew install libomp
                  brew reinstall gcc

            - name: Install package and dependencies (not PyPy)
              if: (!contains(matrix.python-version, 'pypy'))
              run: |
                  python -m pip install --upgrade pip
                  python -m pip install . -vvv

            # For PyPy, export OpenBLAS pkgconfig file, when pypy tries to build scipy from source
            # which needs OpenBLAS
            - name: Install package and dependencies (PyPy)
              if: (contains(matrix.python-version, 'pypy'))
              run: |
                  python -m pip install --upgrade pip
                  python -m pip install . -vvv
              env:
                  PKG_CONFIG_PATH: /usr/local/opt/openblas/lib/pkgconfig

              # Move source to avoid import from local folder
            - name: Rename source
              run: mv glearn glearn-DoNotImport

            # This is to prevent the error "libomp is already initialized",
            # which occurs only in MacOS. To circumvent the error, the
            # following script will remove libomp.dylib from imate package, and
            # copies libomp.dylib from glearn to imate package.
            # - name: Remove duplicate libomp
            #   run: |
            #       chmod +x scripts/fix_libomp.sh
            #       ./scripts/fix_libomp.sh `which python`
            #   shell: bash

            # Temporarily do not perform test due to duplicate libomp error in MacOS.
            # - name: Test
            #   run: |
            #       # python -m pip install --upgrade pytest
            #       # python -m pip install --upgrade pytest-cov
            #       bash ./scripts/fix_libomp.sh `which python`
            #       cd tests
            #       python test_covariance.py
            #       pytest

            # - name: Coverage
            #   run: |
            #       python -m pip install codecov
            #       codecov
